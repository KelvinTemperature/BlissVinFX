{"ast":null,"code":"import React,{useState,useEffect}from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import Flag from'react-native-flags';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_KEY='9456a410c7be3006b596a927';const BASE_URL=`https://v6.exchangerate-api.com/v6/${API_KEY}/history`;const generateDateRange=(startDate,endDate)=>{const dates=[];let currentDate=new Date(startDate);while(currentDate<=new Date(endDate)){dates.push(currentDate.toISOString().split('T')[0]);currentDate.setDate(currentDate.getDate()+1);}return dates;};const fetchHistoricalData=async date=>{try{const response=await fetch(`${BASE_URL}/${date}`);if(!response.ok){throw new Error('Network response was not ok');}const data=await response.json();return data;}catch(error){console.error(`Error fetching historical data for ${date}:`,error);throw error;}};const HistoryScreen=()=>{const[history,setHistory]=useState([]);const[loading,setLoading]=useState(true);useEffect(()=>{const startDate='2024-09-01';const endDate=new Date().toISOString().split('T')[0];const getHistoricalData=async()=>{try{const dates=generateDateRange(startDate,endDate);const dataPromises=dates.map(date=>fetchHistoricalData(date));const responses=await Promise.all(dataPromises);const formattedData=responses.map((data,index)=>({date:dates[index],rates:data.rates}));setHistory(formattedData);}catch(error){console.error('Failed to fetch historical data:',error);}finally{setLoading(false);}};getHistoricalData();},[]);return _jsxs(View,{style:styles.container,children:[_jsx(Text,{style:styles.heading,children:\"Historical Exchange Rates\"}),loading?_jsx(ActivityIndicator,{size:\"large\",color:\"#007bff\"}):_jsx(ScrollView,{children:history.map(item=>_jsxs(View,{style:styles.historyItem,children:[_jsxs(Text,{style:styles.date,children:[\"Date: \",item.date]}),Object.entries(item.rates).map(([currency,rate])=>_jsxs(View,{style:styles.rateItem,children:[_jsx(Flag,{code:currency,size:24}),_jsxs(Text,{style:styles.rateText,children:[currency,\": \",rate]})]},currency))]},item.date))})]});};const styles=StyleSheet.create({container:{flex:1,padding:20,backgroundColor:'#fff'},heading:{fontSize:24,fontWeight:'bold',textAlign:'center',marginBottom:20},historyItem:{padding:10,borderBottomWidth:1,borderBottomColor:'#ccc'},date:{fontSize:18,fontWeight:'bold',marginBottom:5},rateItem:{flexDirection:'row',alignItems:'center',justifyContent:'space-between',marginBottom:10},rateText:{fontSize:16}});export default HistoryScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","ActivityIndicator","ScrollView","Flag","jsx","_jsx","jsxs","_jsxs","API_KEY","BASE_URL","generateDateRange","startDate","endDate","dates","currentDate","Date","push","toISOString","split","setDate","getDate","fetchHistoricalData","date","response","fetch","ok","Error","data","json","error","console","HistoryScreen","history","setHistory","loading","setLoading","getHistoricalData","dataPromises","map","responses","Promise","all","formattedData","index","rates","style","styles","container","children","heading","size","color","item","historyItem","Object","entries","currency","rate","rateItem","code","rateText","create","flex","padding","backgroundColor","fontSize","fontWeight","textAlign","marginBottom","borderBottomWidth","borderBottomColor","flexDirection","alignItems","justifyContent"],"sources":["C:/Users/corei5/Desktop/Bluetooth/BlissVinFX/frontend/screens/HistoryScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, ActivityIndicator, ScrollView } from 'react-native';\r\nimport Flag from 'react-native-flags';\r\n\r\nconst API_KEY = '9456a410c7be3006b596a927';\r\nconst BASE_URL = `https://v6.exchangerate-api.com/v6/${API_KEY}/history`;\r\n\r\n// Helper function to generate date range array between two dates\r\nconst generateDateRange = (startDate, endDate) => {\r\n  const dates = [];\r\n  let currentDate = new Date(startDate);\r\n\r\n  while (currentDate <= new Date(endDate)) {\r\n    dates.push(currentDate.toISOString().split('T')[0]); // Push date in YYYY-MM-DD format\r\n    currentDate.setDate(currentDate.getDate() + 1); // Increment date by 1\r\n  }\r\n\r\n  return dates;\r\n};\r\n\r\n// Helper function to fetch historical data for a specific date\r\nconst fetchHistoricalData = async (date) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/${date}`);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok');\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data; // Return the fetched data\r\n  } catch (error) {\r\n    console.error(`Error fetching historical data for ${date}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst HistoryScreen = () => {\r\n  const [history, setHistory] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const startDate = '2024-09-01';\r\n    const endDate = new Date().toISOString().split('T')[0];\r\n\r\n    const getHistoricalData = async () => {\r\n      try {\r\n        const dates = generateDateRange(startDate, endDate); // Generate date range\r\n        const dataPromises = dates.map(date => fetchHistoricalData(date)); // Fetch historical data for each date\r\n        const responses = await Promise.all(dataPromises);\r\n\r\n        const formattedData = responses.map((data, index) => ({\r\n          date: dates[index],\r\n          rates: data.rates,\r\n        }));\r\n\r\n        setHistory(formattedData);\r\n      } catch (error) {\r\n        console.error('Failed to fetch historical data:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    getHistoricalData();\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.heading}>Historical Exchange Rates</Text>\r\n      {loading ? (\r\n        <ActivityIndicator size=\"large\" color=\"#007bff\" />\r\n      ) : (\r\n        <ScrollView>\r\n          {history.map(item => (\r\n            <View key={item.date} style={styles.historyItem}>\r\n              <Text style={styles.date}>Date: {item.date}</Text>\r\n              {Object.entries(item.rates).map(([currency, rate]) => (\r\n                <View key={currency} style={styles.rateItem}>\r\n                  <Flag code={currency} size={24} />\r\n                  <Text style={styles.rateText}>\r\n                    {currency}: {rate}\r\n                  </Text>\r\n                </View>\r\n              ))}\r\n            </View>\r\n          ))}\r\n        </ScrollView>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n    backgroundColor: '#fff',\r\n  },\r\n  heading: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  historyItem: {\r\n    padding: 10,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#ccc',\r\n  },\r\n  date: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 5,\r\n  },\r\n  rateItem: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    marginBottom: 10,\r\n  },\r\n  rateText: {\r\n    fontSize: 16,\r\n  },\r\n});\r\n\r\nexport default HistoryScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}