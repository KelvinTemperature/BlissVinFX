{"ast":null,"code":"import React,{useState}from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import Animated from\"react-native-web/dist/exports/Animated\";import Easing from\"react-native-web/dist/exports/Easing\";import{Calendar}from'react-native-calendars';import Icon from'react-native-vector-icons/MaterialCommunityIcons';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CalendarScreen=()=>{const[selectedDate,setSelectedDate]=useState(null);const[headerAnimation]=useState(new Animated.Value(1));const animateHeader=()=>{Animated.timing(headerAnimation,{toValue:0.8,duration:300,easing:Easing.ease,useNativeDriver:true}).start(()=>{Animated.timing(headerAnimation,{toValue:1,duration:300,easing:Easing.ease,useNativeDriver:true}).start();});};const handleDayPress=day=>{setSelectedDate(day.dateString);animateHeader();};return _jsxs(View,{style:styles.container,children:[_jsxs(Animated.View,{style:[styles.header,{transform:[{scale:headerAnimation}]}],children:[_jsx(Text,{style:styles.title,children:\"Select a Date\"}),selectedDate&&_jsxs(Text,{style:styles.selectedDate,children:[\"Selected: \",selectedDate]})]}),_jsx(Calendar,{current:new Date().toISOString().split('T')[0],minDate:'2023-01-01',maxDate:'2024-12-31',monthFormat:'yyyy MM',onDayPress:handleDayPress,markedDates:{[selectedDate]:{selected:true,selectedColor:'#007bff',selectedTextColor:'#ffffff',marked:true,dotColor:'#007bff'}},markingType:'multi-dot',theme:{calendarBackground:'#ffffff',dayTextColor:'#333333',todayTextColor:'#007bff',selectedDayBackgroundColor:'#007bff',selectedDayTextColor:'#ffffff',arrowColor:'#007bff',monthTextColor:'#007bff',textSectionTitleColor:'#007bff',dotColor:'#007bff'}}),_jsxs(TouchableOpacity,{style:styles.button,onPress:()=>alert('Events for the selected date'),children:[_jsx(Icon,{name:\"calendar-check\",size:20,color:\"#ffffff\"}),_jsx(Text,{style:styles.buttonText,children:\"View Events\"})]})]});};const styles=StyleSheet.create({container:{flex:1,backgroundColor:'skyblue',padding:20},header:{alignItems:'center',marginBottom:20},title:{fontSize:28,fontWeight:'bold',color:'#007bff'},selectedDate:{fontSize:18,color:'#6c757d',marginTop:10},button:{flexDirection:'row',alignItems:'center',backgroundColor:'#007bff',padding:15,borderRadius:5,marginTop:20,justifyContent:'center'},buttonText:{color:'#ffffff',fontSize:18,fontWeight:'bold',marginLeft:10}});export default CalendarScreen;","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","TouchableOpacity","Animated","Easing","Calendar","Icon","jsx","_jsx","jsxs","_jsxs","CalendarScreen","selectedDate","setSelectedDate","headerAnimation","Value","animateHeader","timing","toValue","duration","easing","ease","useNativeDriver","start","handleDayPress","day","dateString","style","styles","container","children","header","transform","scale","title","current","Date","toISOString","split","minDate","maxDate","monthFormat","onDayPress","markedDates","selected","selectedColor","selectedTextColor","marked","dotColor","markingType","theme","calendarBackground","dayTextColor","todayTextColor","selectedDayBackgroundColor","selectedDayTextColor","arrowColor","monthTextColor","textSectionTitleColor","button","onPress","alert","name","size","color","buttonText","create","flex","backgroundColor","padding","alignItems","marginBottom","fontSize","fontWeight","marginTop","flexDirection","borderRadius","justifyContent","marginLeft"],"sources":["C:/Users/corei5/Desktop/Bluetooth/BlissVinFX/frontend/screens/CalendarScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity, Animated, Easing } from 'react-native';\r\nimport { Calendar } from 'react-native-calendars';\r\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\nconst CalendarScreen = () => {\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [headerAnimation] = useState(new Animated.Value(1));\r\n\r\n  const animateHeader = () => {\r\n    Animated.timing(headerAnimation, {\r\n      toValue: 0.8,\r\n      duration: 300,\r\n      easing: Easing.ease,\r\n      useNativeDriver: true,\r\n    }).start(() => {\r\n      Animated.timing(headerAnimation, {\r\n        toValue: 1,\r\n        duration: 300,\r\n        easing: Easing.ease,\r\n        useNativeDriver: true,\r\n      }).start();\r\n    });\r\n  };\r\n\r\n  const handleDayPress = (day) => {\r\n    setSelectedDate(day.dateString);\r\n    animateHeader();\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Animated.View style={[styles.header, { transform: [{ scale: headerAnimation }] }]}>\r\n        <Text style={styles.title}>Select a Date</Text>\r\n        {selectedDate && <Text style={styles.selectedDate}>Selected: {selectedDate}</Text>}\r\n      </Animated.View>\r\n      <Calendar\r\n        current={new Date().toISOString().split('T')[0]}\r\n        minDate={'2023-01-01'}\r\n        maxDate={'2024-12-31'}\r\n        monthFormat={'yyyy MM'}\r\n        onDayPress={handleDayPress}\r\n        markedDates={{\r\n          [selectedDate]: {\r\n            selected: true,\r\n            selectedColor: '#007bff',\r\n            selectedTextColor: '#ffffff',\r\n            marked: true,\r\n            dotColor: '#007bff',\r\n          },\r\n        }}\r\n        markingType={'multi-dot'}\r\n        theme={{\r\n          calendarBackground: '#ffffff',\r\n          dayTextColor: '#333333',\r\n          todayTextColor: '#007bff',\r\n          selectedDayBackgroundColor: '#007bff',\r\n          selectedDayTextColor: '#ffffff',\r\n          arrowColor: '#007bff',\r\n          monthTextColor: '#007bff',\r\n          textSectionTitleColor: '#007bff',\r\n          dotColor: '#007bff',\r\n        }}\r\n      />\r\n      <TouchableOpacity style={styles.button} onPress={() => alert('Events for the selected date')}>\r\n        <Icon name=\"calendar-check\" size={20} color=\"#ffffff\" />\r\n        <Text style={styles.buttonText}>View Events</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'skyblue',\r\n    padding: 20,\r\n  },\r\n  header: {\r\n    alignItems: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  title: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    color: '#007bff',\r\n  },\r\n  selectedDate: {\r\n    fontSize: 18,\r\n    color: '#6c757d',\r\n    marginTop: 10,\r\n  },\r\n  button: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    backgroundColor: '#007bff',\r\n    padding: 15,\r\n    borderRadius: 5,\r\n    marginTop: 20,\r\n    justifyContent: 'center',\r\n  },\r\n  buttonText: {\r\n    color: '#ffffff',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginLeft: 10,\r\n  },\r\n});\r\n\r\nexport default CalendarScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}