{"ast":null,"code":"import React,{useState}from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import TextInput from\"react-native-web/dist/exports/TextInput\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Alert from\"react-native-web/dist/exports/Alert\";import ImageBackground from\"react-native-web/dist/exports/ImageBackground\";import Icon from'react-native-vector-icons/MaterialCommunityIcons';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PuzzleScreen=()=>{const originalWord='REACTNATIVE';const[userInput,setUserInput]=useState('');const[puzzleDisplay,setPuzzleDisplay]=useState(shuffle(originalWord));function shuffle(word){return word.split('').sort(()=>Math.random()-0.5).join('');}const handleCheckAnswer=()=>{if(userInput.toUpperCase()===originalWord){Alert.alert('Congratulations!','You solved the puzzle.');setPuzzleDisplay(shuffle(originalWord));setUserInput('');}else{Alert.alert('Try Again!','The answer is incorrect.');}};const handleReset=()=>{setPuzzleDisplay(shuffle(originalWord));setUserInput('');};return _jsx(ImageBackground,{source:{uri:'https://images.unsplash.com/photo-1521747116042-5a810fda9664?crop=entropy&cs=tinysrgb&fit=max&ixid=MnwyNzEyNzN8MHwxfGFsbHwxfHx8fHx8fHwxNjcwMTI1NDM5&ixlib=rb-1.2.1&q=80&w=1080'},style:styles.background,children:_jsx(View,{style:styles.container,children:_jsxs(View,{style:styles.box,children:[_jsx(Text,{style:styles.puzzleText,children:puzzleDisplay}),_jsx(TextInput,{style:styles.input,placeholder:\"Enter your answer\",value:userInput,onChangeText:setUserInput}),_jsxs(View,{style:styles.buttonContainer,children:[_jsxs(TouchableOpacity,{style:styles.button,onPress:handleCheckAnswer,children:[_jsx(Icon,{name:\"check\",size:20,color:\"#fff\"}),_jsx(Text,{style:styles.buttonText,children:\"Check Answer\"})]}),_jsxs(TouchableOpacity,{style:[styles.button,styles.resetButton],onPress:handleReset,children:[_jsx(Icon,{name:\"restart\",size:20,color:\"#fff\"}),_jsx(Text,{style:styles.buttonText,children:\"Reset\"})]})]})]})})});};const styles=StyleSheet.create({background:{flex:1,resizeMode:'cover',justifyContent:'center'},container:{flex:1,justifyContent:'center',alignItems:'center'},box:{width:'90%',maxWidth:400,padding:20,backgroundColor:'#fff',borderRadius:10,elevation:5,shadowColor:'#000',shadowOffset:{width:0,height:2},shadowOpacity:0.1,shadowRadius:5,alignItems:'center'},puzzleText:{fontSize:36,fontWeight:'bold',color:'#007bff',marginBottom:20},input:{height:50,width:'100%',borderColor:'#007bff',borderWidth:2,borderRadius:10,paddingHorizontal:15,fontSize:18,color:'#333',marginBottom:20},buttonContainer:{flexDirection:'row',justifyContent:'space-between',width:'100%'},button:{backgroundColor:'#007bff',padding:15,borderRadius:10,flexDirection:'row',alignItems:'center',justifyContent:'center',flex:1,marginHorizontal:5},resetButton:{backgroundColor:'#dc3545'},buttonText:{color:'#fff',fontSize:18,fontWeight:'bold',marginLeft:10}});export default PuzzleScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","Alert","ImageBackground","Icon","jsx","_jsx","jsxs","_jsxs","PuzzleScreen","originalWord","userInput","setUserInput","puzzleDisplay","setPuzzleDisplay","shuffle","word","split","sort","Math","random","join","handleCheckAnswer","toUpperCase","alert","handleReset","source","uri","style","styles","background","children","container","box","puzzleText","input","placeholder","value","onChangeText","buttonContainer","button","onPress","name","size","color","buttonText","resetButton","create","flex","resizeMode","justifyContent","alignItems","width","maxWidth","padding","backgroundColor","borderRadius","elevation","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","fontSize","fontWeight","marginBottom","borderColor","borderWidth","paddingHorizontal","flexDirection","marginHorizontal","marginLeft"],"sources":["C:/Users/corei5/Desktop/Bluetooth/BlissVinFX/frontend/screens/PuzzleScreen.js"],"sourcesContent":["// screens/PuzzleScreen.js\r\nimport React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, Alert, ImageBackground } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\nconst PuzzleScreen = () => {\r\n  const originalWord = 'REACTNATIVE'; // Example word to unscramble\r\n  const [userInput, setUserInput] = useState('');\r\n  const [puzzleDisplay, setPuzzleDisplay] = useState(shuffle(originalWord));\r\n\r\n  // Shuffle the letters of the word\r\n  function shuffle(word) {\r\n    return word.split('').sort(() => Math.random() - 0.5).join('');\r\n  }\r\n\r\n  const handleCheckAnswer = () => {\r\n    if (userInput.toUpperCase() === originalWord) {\r\n      Alert.alert('Congratulations!', 'You solved the puzzle.');\r\n      setPuzzleDisplay(shuffle(originalWord)); // Set a new shuffled word\r\n      setUserInput('');\r\n    } else {\r\n      Alert.alert('Try Again!', 'The answer is incorrect.');\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setPuzzleDisplay(shuffle(originalWord));\r\n    setUserInput('');\r\n  };\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={{ uri: 'https://images.unsplash.com/photo-1521747116042-5a810fda9664?crop=entropy&cs=tinysrgb&fit=max&ixid=MnwyNzEyNzN8MHwxfGFsbHwxfHx8fHx8fHwxNjcwMTI1NDM5&ixlib=rb-1.2.1&q=80&w=1080' }} // Replace with your background image URL\r\n      style={styles.background}\r\n    >\r\n      <View style={styles.container}>\r\n        <View style={styles.box}>\r\n          <Text style={styles.puzzleText}>{puzzleDisplay}</Text>\r\n\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Enter your answer\"\r\n            value={userInput}\r\n            onChangeText={setUserInput}\r\n          />\r\n\r\n          <View style={styles.buttonContainer}>\r\n            <TouchableOpacity style={styles.button} onPress={handleCheckAnswer}>\r\n              <Icon name=\"check\" size={20} color=\"#fff\" />\r\n              <Text style={styles.buttonText}>Check Answer</Text>\r\n            </TouchableOpacity>\r\n            \r\n            <TouchableOpacity style={[styles.button, styles.resetButton]} onPress={handleReset}>\r\n              <Icon name=\"restart\" size={20} color=\"#fff\" />\r\n              <Text style={styles.buttonText}>Reset</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  background: {\r\n    flex: 1,\r\n    resizeMode: 'cover',\r\n    justifyContent: 'center',\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  box: {\r\n    width: '90%',\r\n    maxWidth: 400,\r\n    padding: 20,\r\n    backgroundColor: '#fff',\r\n    borderRadius: 10,\r\n    elevation: 5, // Adds shadow for Android\r\n    shadowColor: '#000', // Shadow color for iOS\r\n    shadowOffset: { width: 0, height: 2 }, // Shadow offset for iOS\r\n    shadowOpacity: 0.1, // Shadow opacity for iOS\r\n    shadowRadius: 5, // Shadow radius for iOS\r\n    alignItems: 'center',\r\n  },\r\n  puzzleText: {\r\n    fontSize: 36,\r\n    fontWeight: 'bold',\r\n    color: '#007bff',\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    height: 50,\r\n    width: '100%',\r\n    borderColor: '#007bff',\r\n    borderWidth: 2,\r\n    borderRadius: 10,\r\n    paddingHorizontal: 15,\r\n    fontSize: 18,\r\n    color: '#333',\r\n    marginBottom: 20,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    backgroundColor: '#007bff',\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flex: 1,\r\n    marginHorizontal: 5,\r\n  },\r\n  resetButton: {\r\n    backgroundColor: '#dc3545',\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginLeft: 10,\r\n  },\r\n});\r\n\r\nexport default PuzzleScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}